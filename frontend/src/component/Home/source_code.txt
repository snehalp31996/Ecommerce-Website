import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.*;

public class source_code {
    static  void dominates(List<String> matches)
    {
        Map<String, List<String>> dominates = new HashMap<>();

        for(String match : matches) {
            String[] matchScore = match.split(" ");

            if(!dominates.containsKey(matchScore[0]))
            {

                dominates.put(matchScore[0], Arrays.asList(matchScore[2]));
            }else{
                List<String> list =  dominates.get(matchScore[0]);
                list.add(matchScore[2]);

                dominates.put(matchScore[0], list);
            }
        }

        for (Map.Entry<String,List<String>> entry: dominates.entrySet()){

            List<String> team = entry.getValue();
            List<String> newList =  team;
            for(String dominated: team){
                if(dominates.containsKey(dominated)){
                    List<String> dominList = dominates.get(dominated);

                    for(String doms : dominList){
                        newList.add(doms);
                    }
                }
            }

            dominates.put(entry.getKey(),newList);
        }

        System.out.println(dominates);
    }
    static void marginVictor(List<String> matches){
        System.out.println(matches);
        Map<String, Integer> winMargin = new HashMap<>();
        Map<String, Integer> totalMatch = new HashMap<>();
        double maxAverage = Integer.MIN_VALUE;
        String maxTeam = "";
        for(String match : matches)
        {
            String[] matchScore = match.split(" ");
//            System.out.println((matchScore[0]));
            Integer margin = Integer.parseInt(matchScore[1]) - Integer.parseInt(matchScore[3]);
            totalMatch.put(matchScore[0],totalMatch.getOrDefault(matchScore[0],0)+1);
            winMargin.put(matchScore[0], winMargin.getOrDefault(matchScore[0],0) + margin);
        }

        for(Map.Entry<String ,Integer> entry: winMargin.entrySet()){
            String team = entry.getKey();
            Integer margin = entry.getValue();
            Integer noOfGames = totalMatch.get(team);
            double avg = (double) margin/noOfGames;
            if(avg> maxAverage){
                maxAverage = avg;
                maxTeam = team;
            }
        }

        System.out.println(maxAverage);
        System.out.println(maxTeam);
    }

    static public void main (String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new FileReader("src/sports.txt"));
        List<String> list = new ArrayList<>();
        try {

            String line = br.readLine();
            while (line != null) {
                list.add(line);
                line = br.readLine();
            }

        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            br.close();
        }

        marginVictor(list);
        dominates(list);
    }
}
